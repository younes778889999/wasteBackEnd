# Generated by Django 5.1.1 on 2025-02-19 18:16

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Full_Name', models.CharField(max_length=255)),
                ('Gender', models.CharField(choices=[('M', 'ذكر'), ('F', 'أنثى')], max_length=1)),
                ('Age', models.PositiveIntegerField(null=True)),
                ('Phone_Number', models.CharField(max_length=10, null=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(10)])),
                ('Status', models.CharField(choices=[('P', 'دائم'), ('T', 'مؤقت')], max_length=1)),
                ('Performance_Score', models.PositiveIntegerField(default=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('Has_Disability', models.BooleanField(default=False)),
                ('Availability', models.BooleanField(default=True)),
                ('Remarks', models.TextField(blank=True)),
                ('Position', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'db_table': 'Drivers',
                'ordering': ['Full_Name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Full_Name', models.CharField(max_length=255)),
                ('Age', models.PositiveIntegerField(null=True)),
                ('Gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('Phone_Number', models.CharField(max_length=10, null=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(10)])),
                ('Certificate', models.CharField(max_length=500)),
                ('Performance_Score', models.PositiveIntegerField(default=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('Has_Disability', models.BooleanField(default=False)),
                ('Status', models.CharField(choices=[('P', 'Permanent'), ('T', 'Temporary')], max_length=1)),
                ('Position', models.CharField(blank=True, max_length=500)),
                ('Remarks', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'Employees',
                'ordering': ['Full_Name'],
            },
        ),
        migrations.CreateModel(
            name='Landfill',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Address', models.TextField(blank=True)),
                ('Longitude_M', models.DecimalField(decimal_places=7, max_digits=10)),
                ('Latitude_M', models.DecimalField(decimal_places=7, max_digits=10)),
                ('Collection_center', models.BooleanField(default=False)),
                ('Status', models.CharField(choices=[('P', 'Permanent'), ('T', 'Temporary'), ('R', 'Random')], max_length=1)),
                ('Remarks', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'Landfills',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Name', models.CharField(max_length=255)),
                ('Population', models.PositiveIntegerField(null=True)),
                ('Avg_waste', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
            ],
            options={
                'db_table': 'Locations',
            },
        ),
        migrations.CreateModel(
            name='Waste_Container',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Address', models.TextField(blank=True)),
                ('Longitude_M', models.DecimalField(decimal_places=7, max_digits=12)),
                ('Latitude_M', models.DecimalField(decimal_places=7, max_digits=12)),
                ('Remarks', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'Containers',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Complaints',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Name', models.CharField(max_length=255)),
                ('Number', models.CharField(max_length=10, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(10)])),
                ('Pictures', models.ImageField(blank=True, null=True, upload_to='complaint_pictures/')),
                ('Title', models.TextField()),
                ('Description', models.TextField()),
                ('Date_filed', models.DateTimeField(auto_now_add=True)),
                ('Date_solved', models.DateTimeField(blank=True, null=True)),
                ('Status', models.CharField(choices=[('S', 'Solved'), ('U', 'Unsolved')], max_length=1)),
                ('employee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='Staff.employee')),
            ],
            options={
                'db_table': 'Complaints',
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Start_Date', models.DateTimeField(auto_now_add=True)),
                ('Duration_min', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('Distance_km', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('Fuel_Spent_Liter', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('Landfill', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Staff.landfill')),
                ('Location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Staff.location')),
            ],
            options={
                'db_table': 'Trips',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TripComplaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complaint', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Staff.complaints', unique=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Staff.trip')),
            ],
            options={
                'db_table': 'Trips_Complaints',
            },
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Truck_model', models.CharField(max_length=255)),
                ('Availability', models.BooleanField(default=True)),
                ('Plate_number', models.CharField(max_length=30)),
                ('Longitude_M', models.DecimalField(decimal_places=7, default=0, max_digits=12)),
                ('Latitude_M', models.DecimalField(decimal_places=7, default=0, max_digits=12)),
                ('on_trip', models.BooleanField(default=False)),
                ('Remarks', models.TextField(blank=True)),
                ('Maintenance', models.CharField(blank=True, max_length=255)),
                ('driver', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Truck', to='Staff.driver')),
            ],
            options={
                'db_table': 'Trucks',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='trip',
            name='truck',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='Staff.truck'),
        ),
        migrations.AddField(
            model_name='complaints',
            name='truck_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='Staff.truck'),
        ),
        migrations.CreateModel(
            name='TripContainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Staff.trip')),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Staff.waste_container')),
            ],
            options={
                'db_table': 'Trips_Containers',
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Full_Name', models.CharField(max_length=255)),
                ('Gender', models.CharField(choices=[('M', 'ذكر'), ('F', 'أنثى')], max_length=1)),
                ('Age', models.PositiveIntegerField(null=True)),
                ('Certificate', models.CharField(max_length=500)),
                ('Phone_Number', models.CharField(max_length=10, null=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(10)])),
                ('Status', models.CharField(choices=[('P', 'دائم'), ('T', 'مؤقت')], max_length=1)),
                ('Performance_Score', models.PositiveIntegerField(default=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('Has_Disability', models.BooleanField(default=False)),
                ('Tool', models.CharField(blank=True, max_length=255, null=True)),
                ('Availability', models.BooleanField(default=True)),
                ('Remarks', models.TextField(blank=True)),
                ('Position', models.CharField(blank=True, max_length=500)),
                ('Location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Staff.location')),
                ('Truck', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='worker_set', to='Staff.truck')),
            ],
            options={
                'db_table': 'Workers',
                'ordering': ['Full_Name'],
            },
        ),
        migrations.CreateModel(
            name='TripWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Staff.trip')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Staff.worker')),
            ],
            options={
                'db_table': 'Trips_Workers',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('role', models.CharField(choices=[('admin', 'مشرف'), ('manager_user', 'مدير'), ('employee_user', 'موظف'), ('truck_user', 'شاحنة')], default='manager_user', max_length=20)),
                ('employee_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='Staff.employee')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('truck_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='Staff.truck')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
